arrange(category, .by_group = TRUE)
View(slice)
data_cut <- summarise(slice,
revenue = sum(cost),
items = n_distinct(line_item_id),
items2 = n(),
items3 = sum(quantity),
orders = n_distinct(order_id)
)
View(data_cut)
sum(is.na(segments))
# remove all NA values (where gender = NA)
segments <- na.omit(segments)
sum(is.na(segments))
data_cut <- summarise(slice,
revenue = sum(cost),
items = sum(quantity),
orders = n_distinct(order_id)
)
data_cut <- data_cut %>% group_by(user_id)
data_cut2 <- summarise(data_cut,
total_revenue = sum(revenue),
total_orders = sum(orders))
View(data_cut2)
data_cut <- left_join(data_cut, data_cut2, by = "user_id")
slice <- left_join(orders, subset(products, select = c(style_id, category)), by = "style_id")
slice <- slice %>%
group_by(user_id, category) %>%
arrange(category, .by_group = TRUE)
# create summary tables for features
data_cut <- summarise(slice,
revenue = sum(cost),
items = sum(quantity),
orders = n_distinct(order_id)
)
# find total spend by user to find percentages for each category
data_cut <- data_cut %>% group_by(user_id)
data_cut2 <- summarise(data_cut,
total_revenue = sum(revenue),
total_items = sum(items),
total_orders = sum(orders))
data_cut <- left_join(data_cut, data_cut2, by = "user_id")
data_cut$avg_order <- data_cut$revenue / data_cut$orders
data_cut$pct_order <- data_cut$orders / data_cut$total_orders
data_cut$pct_order <- round(data_cut$orders / data_cut$total_orders,2)
data_cut$avg_order <- round(data_cut$revenue / data_cut$orders,2)
data_cut$pct_revenue <- round(data_cut$revenue / data_cut$total_revenue, 2)
View(segments)
data_cut <- data_cut[, c(1, 2, 4, 9:11)]
View(segments)
unique(products$category)
shoe_lovers <- data_cut %>% filter(category = "Outerwear")
shoe_lovers <- data_cut %>% filter(category == "Outerwear")
View(shoe_lovers)
ustomers_by_category <- data_cut[, c(1, 2, 4, 9:11)]
customers_by_category <- data_cut
shoe_lovers <- customers_by_category %>% filter(category == "Outerwear")
kable(head(shoe_lovers, 5), caption = "Segmentation fault feature dataset")
shoe_lovers <- customers_by_category %>% filter(category == "Outerwear") %>%
arrange(desc(pct_revenue))
kable(head(shoe_lovers, 5), caption = "Segmentation fault feature dataset")
shoe_lovers <- customers_by_category %>% filter(category == "Outerwear") %>%
arrange(desc(avg_order))
kable(head(shoe_lovers, 5), caption = "Segmentation fault feature dataset")
shoe_lovers <- left_join(shoe_lovers, segment, by = "user_id")
shoe_lovers <- left_join(shoe_lovers, segments, by = "user_id")
kable(head(shoe_lovers, 5), caption = "Shoe lovers features dataset")
# extract customers that have placed orders
segments <- as.data.frame(unique(orders$user_id))
names(segments) <- "user_id"
# add user data (gender, platform, location, channel)
segments <- left_join(segments, users, by = "user_id")
segments <- segments[, c(1, 2, 5:7)]
names(segments)[2] <- "channel"
names(segments)[3] <- "platform"
# add cohort date
segments <-left_join(segments, subset(customers_first_order, select = c(user_id, cohort)), by = "user_id")
# add days since last purchase and category of last purchase
slice <- orders
slice$since_last <- as.Date("2018-01-01") - as.Date(slice$completed_at)
slice <- slice %>% group_by(user_id) %>%
arrange(since_last, .by_group = TRUE)
# find top rank to determine last purchase
slice <- mutate(slice, rank = dense_rank(since_last))
slice <- slice %>% filter (rank == 1) # filter for the first purchase
slice <- slice[!duplicated(slice$user_id), ] # remove dupicates
segments <- left_join(segments, subset(slice, select = c(user_id, since_last, style_id)), by = "user_id")
segments <- left_join(segments, subset(products, select = c(style_id, category), by = "style_id"))
segments <- segments[, -c(8)]
names(segments)[8] <- "last_category"
# add category of first purchase
slice <- orders
slice <- slice %>% group_by(user_id) %>%
arrange(completed_at, .by_group = TRUE)
# find top rank to determine first purchase
slice <- mutate(slice, rank = dense_rank(completed_at))
slice <- slice %>% filter (rank == 1) # filter for the first purchase
slice <- slice[!duplicated(slice$user_id), ] # remove dupicates
segments <- left_join(segments, subset(slice, select = c(user_id, style_id)), by = "user_id")
segments <- left_join(segments, subset(products, select = c(style_id, category), by = "style_id"))
segments <- segments[, -c(9)]
names(segments)[9] <- "first_category"
# add features by purchase history for each category
slice <- left_join(orders, subset(products, select = c(style_id, category)), by = "style_id")
slice <- slice %>%
group_by(user_id, category) %>%
arrange(category, .by_group = TRUE)
# create summary tables for features
data_cut <- summarise(slice,
revenue = sum(cost),
items = sum(quantity),
orders = n_distinct(order_id)
)
# find total spend by user to find percentages for each category
data_cut <- data_cut %>% group_by(user_id)
data_cut2 <- summarise(data_cut,
total_revenue = sum(revenue),
total_items = sum(items),
total_orders = sum(orders))
data_cut <- left_join(data_cut, data_cut2, by = "user_id")
# add average order size by category
data_cut$avg_order <- round(data_cut$revenue / data_cut$orders,2)
# add percentage of purchases category
data_cut$pct_revenue <- round(data_cut$revenue / data_cut$total_revenue, 2)
# add percentage of orders in category
data_cut$pct_order <- round(data_cut$orders / data_cut$total_orders,2)
# subset features to use
customers_by_category <- data_cut[, c(1, 2, 4, 9:11)]
unique(products$category)
# create dataset for shoe lovers
shoe_lovers <- customers_by_category %>% filter(category == "Outerwear") %>%
arrange(desc(avg_order))
# display table
kable(head(shoe_lovers, 5), caption = "Shoe lovers features dataset")
shoe_lovers <- left_join(shoe_lovers, segments, by = "user_id")
sum(is.na(shoe_lovers))
sum(is.na(shoe_lovers$gender))
unique(products$category)
kable(head(shoe_lovers[ , 1:5], 5), caption = "Shoe lovers features dataset")
sum(is.na(shoe_lovers))
sum(is.na(shoe_lovers$gender))
shoe_lovers <- na.omit(shoe_lovers)
lovers <- customers_by_category %>% filter(category == "Outerwear") %>%
arrange(desc(avg_order))
lovers <- left_join(lovers, segments, by = "user_id")
# remove all NA values (where gender = NA)
sum(is.na(lovers))
sum(is.na(lovers$gender))
lovers <- na.omit(lovers)
View(lovers)
?ntile
names(lovers)
ntile(lovers$avg_order)
ntile(lovers$avg_order, 4)
lovers %>% filter(ntile(lovers$avg_order, 4) >2)
lovers %>% filter(items > mean(items))
mean(items)
names(lovers)
mean(lovers$items)
median(lovers$items)
lovers %>% filter(items > median(lovers$items))
lovers <- lovers %>% filter(items > median(lovers$items))
lovers <- lovers %>% filter(pct_revenue > .5))
lovers <- lovers %>% filter(pct_revenue > .5)
lovers <- customers_by_category %>% filter(category == "Outerwear") %>%
arrange(desc(avg_order))
lovers <- left_join(lovers, segments, by = "user_id")
sum(is.na(lovers))
sum(is.na(lovers$gender))
lovers <- na.omit(lovers)
lovers <- lovers %>% filter(items > median(lovers$items))
ntile(lovers$items) > 3
ntile(lovers$items, 4) > 2
View(data_cut)
View(data_cut)
# extract customers that have placed orders
segments <- as.data.frame(unique(orders$user_id))
names(segments) <- "user_id"
# add user data (gender, platform, location, channel)
segments <- left_join(segments, users, by = "user_id")
segments <- segments[, c(1, 2, 5:7)]
names(segments)[2] <- "channel"
names(segments)[3] <- "platform"
segments <-left_join(segments, subset(customers_first_order, select = c(user_id, cohort)), by = "user_id")
# add days since last purchase and category of last purchase
slice <- orders
slice$since_last <- as.Date("2018-01-01") - as.Date(slice$completed_at)
slice <- slice %>% group_by(user_id) %>%
arrange(since_last, .by_group = TRUE)
# find top rank to determine last purchase
slice <- mutate(slice, rank = dense_rank(since_last))
slice <- slice %>% filter (rank == 1) # filter for the first purchase
slice <- slice[!duplicated(slice$user_id), ] # remove dupicates
segments <- left_join(segments, subset(slice, select = c(user_id, since_last, style_id)), by = "user_id")
segments <- left_join(segments, subset(products, select = c(style_id, category), by = "style_id"))
segments <- segments[, -c(8)]
names(segments)[8] <- "last_category"
# add category of first purchase
slice <- orders
slice <- slice %>% group_by(user_id) %>%
arrange(completed_at, .by_group = TRUE)
# find top rank to determine first purchase
slice <- mutate(slice, rank = dense_rank(completed_at))
slice <- slice %>% filter (rank == 1) # filter for the first purchase
slice <- slice[!duplicated(slice$user_id), ] # remove dupicates
segments <- left_join(segments, subset(slice, select = c(user_id, style_id)), by = "user_id")
segments <- left_join(segments, subset(products, select = c(style_id, category), by = "style_id"))
segments <- segments[, -c(9)]
names(segments)[9] <- "first_category"
slice <- left_join(orders, subset(products, select = c(style_id, category)), by = "style_id")
slice <- slice %>%
group_by(user_id, category) %>%
arrange(category, .by_group = TRUE)
# create summary tables for features
data_cut <- summarise(slice,
revenue = sum(cost),
items = sum(quantity),
orders = n_distinct(order_id)
)
# find total spend by user to find percentages for each category
data_cut <- data_cut %>% group_by(user_id)
data_cut2 <- summarise(data_cut,
total_revenue = sum(revenue),
total_items = sum(items),
total_orders = sum(orders))
data_cut <- left_join(data_cut, data_cut2, by = "user_id")
# add average order size by category
data_cut$avg_order <- round(data_cut$revenue / data_cut$orders,2)
# add percentage of purchases category
data_cut$pct_revenue <- round(data_cut$revenue / data_cut$total_revenue, 2)
# add percentage of orders in category
data_cut$pct_order <- round(data_cut$orders / data_cut$total_orders,2)
View(data_cut)
customers_by_category <- data_cut[, c(1:4, 9:11)]
unique(products$category)
lovers <- customers_by_category %>% filter(category == "Outerwear") %>%
arrange(desc(avg_order))
lovers <- left_join(lovers, segments, by = "user_id")
sum(is.na(lovers))
sum(is.na(lovers$gender))
lovers <- na.omit(lovers)
names(lovers)
View(lovers)
median(lovers$revenue)
filter_high_end <- mutate(filter_high_end, rank_rev=order_by(revenue, percent_rank(revenue)))
filter_high_end <- lovers
filter_high_end <- mutate(filter_high_end, rank_rev=order_by(revenue, percent_rank(revenue)))
filter_high_end <- lovers
filter_high_end <- mutate(filter_high_end, rank_rev = percent_rank(revenue))
filter_high_end <- mutate(lovers, rank_rev = percent_rank(revenue))
View(filter_high_end)
?percent_ran
?percent_rank
filter_high_end <- mutate(lovers, rank_rev = dense_rank(revenue))
dense_rank(revenue)
mutate(lovers, rank_rev = dense_rank(revenue))
mutate(lovers, rank_rev = dense_rank(revenue))
filter_high_end <- mutate(lovers, rank_rev = dense_rank(revenue))
filter_high_end <- lovers %>% group_by(user_id) %>%
arrange(revenue, .by_group = TRUE)
filter_high_end <- mutate(lovers, rank_rev = dense_rank(revenue))
filter_high_end <- mutate(lovers, rank_rev = dense_rank(items))
filter_high_end <- lovers %>% group_by(revenue)
filter_high_end <- mutate(lovers, rank_rev = dense_rank(revenue))
filter_high_end <- lovers %>% group_by(revenue) %>%
arrange(revenue, .by_group = TRUE)
filter_high_end <- mutate(lovers, rank_rev = dense_rank(items))
filter_high_end <- mutate(lovers, rank_rev = dense_rank(desc(revenue)))
filter_high_end <- lovers %>% group_by(user_id) %>%
arrange(revenue, .by_group = TRUE)
filter_high_end <- mutate(filter_high_end, rank_rev = dense_rank(revenue))
filter_high_end <- lovers %>% group_by(user_id) %>%
arrange(revenue, .by_group = TRUE)
filter_high_end <- lovers %>% group_by(category) %>%
arrange(revenue, .by_group = TRUE)
filter_high_end <- mutate(filter_high_end, rank_rev = dense_rank(revenue))
filter_high_end <- lovers %>% group_by(category) %>%
arrange(desc(revenue), .by_group = TRUE)
filter_high_end <- mutate(filter_high_end, rank_rev = dense_rank(revenue))
filter_high_end <- mutate(filter_high_end, rank_rev = dense_rank(desc(revenue)))
filter_high_end <- filter_high_end %>% rank_rev > 10
filter_high_end <- filter_high_end %>% filter(rank_rev <= 10)
median(lovers$pct_revenue)
filter_cash_cows<- lovers %>% group_by(category) %>%
arrange(desc(items), .by_group = TRUE)
filter_cash_cows <- mutate(filter_high_end, rank_rev = percent_rank(desc(items)))
View(filter_cash_cows)
filter_cash_cows <- lovers %>% group_by(category) %>%
arrange(desc(items), .by_group = TRUE)
filter_cash_cows <- mutate(filter_cash_cows, rank_rev = percent_rank(desc(items)))
filter_cash_cows <- lovers %>% group_by(category) %>%
arrange(desc(items), .by_group = TRUE)
filter_cash_cows <- mutate(filter_cash_cows, rank_rev = percent_rank(items))
filter_cash_cows <- lovers %>% group_by(category) %>%
arrange(desc(revenue), .by_group = TRUE)
filter_cash_cows <- mutate(filter_cash_cows, rank_rev = percent_rank(desc(revenue)))
filter_cash_cows <- lovers %>% group_by(category) %>%
arrange(revenue, .by_group = TRUE)
filter_cash_cows <- mutate(filter_cash_cows, rank_rev = percent_rank(revenue))
filter_cash_cows <- lovers %>% group_by(category) %>%
arrange(revenue, .by_group = TRUE)
filter_cash_cows <- mutate(filter_cash_cows, rank_rev = percent_rank(revenue))
filter_cash_cows <- filter_high_end %>% filter(rank_rev >= 0.75 & items > mean(filter_cash_cows$items & pct_revenue > 0.3) )
filter_cash_cows <- lovers %>% group_by(category) %>%
arrange(revenue, .by_group = TRUE)
filter_cash_cows <- mutate(filter_cash_cows, rank_rev = percent_rank(revenue))
filter_cash_cows <- filter_cash_cows %>% filter(rank_rev >= 0.75 & items > mean(filter_cash_cows$items & pct_revenue > 0.3) )
filter_cash_cows <- lovers %>% group_by(category) %>%
arrange(revenue, .by_group = TRUE)
filter_cash_cows <- mutate(filter_cash_cows, rank_rev = percent_rank(revenue))
filter_cash_cows <- filter_cash_cows %>%
filter(rank_rev >= 0.75 & items > mean(filter_cash_cows$items) & pct_revenue > 0.3)
lovers$cohort <- as.Date(lovers$cohort)
View(lovers)
lovers %>% filter(cohort > "2017-06-01")
filter_new_lovers <- lovers %>% filter(cohort > "2017-06-01")
View(filter_new_lovers)
filter_new_lovers <- lovers %>% filter(cohort >= "2017-06-01" & pct_revenue > 0.5)
product_category = "Outerwear"
filter_recent_lovers <- lovers %>% filter(last_category == product_category)
View(filter_recent_lovers)
filter_recent_lovers <- lovers %>% filter(last_category == product_category & since_last <= 30)
?bind_rows
lovers_list <- bind_rows(filter_high_end, filter_cash_cows, .id = "id")
View(lovers_list)
lovers_list <- bind_rows(lovers_list, filter_new_lovers, .id = "id")
lovers_list <- bind_rows(filter_high_end, filter_cash_cows, filter_new_lovers, .id = "id")
lovers_list <- bind_rows(filter_high_end, filter_cash_cows, filter_new_lovers, filter_recent_lovers, .id = "id")
stars <- intersect(filter_high_end, filter_cash_cows)
View(stars)
View(lovers)
?intersect(
?intersect
?intersect
stars <- intersect(filter_high_end$user_id, filter_cash_cows$user_id)
lovers_list$id[lovers_list$user_id %in% stars] <- 0
View(lovers_list)
View(lovers_list)
View(data_cut)
customers_by_category <- data_cut[, c(1:5, 9:11)]
unique(products$category)
product_category = "Outerwear"
lovers <- customers_by_category %>% filter(category == product_category) %>%
arrange(desc(avg_order))
lovers <- left_join(lovers, segments, by = "user_id")
lovers$cohort <- as.Date(lovers$cohort)
# remove all NA values (where gender = NA)
sum(is.na(lovers))
sum(is.na(lovers$gender))
lovers <- na.omit(lovers)
names(lovers)
# 1. filter for all high end users that are driving the bottom line, pick the top 10
# these folks buy the product consistently but may also buy other things
filter_high_end <- lovers %>% group_by(category) %>%
arrange(desc(revenue), .by_group = TRUE)
filter_high_end <- mutate(filter_high_end, rank_rev = dense_rank(desc(revenue)))
filter_high_end <- filter_high_end %>% filter(rank_rev <= 10)
# 2. filter for all customers that are in the top 25% in revenue for the category
# and purchase more than median number of items
# and spend more than 30% of their total Everland spending on the category
filter_cash_cows <- lovers %>% group_by(category) %>%
arrange(revenue, .by_group = TRUE)
filter_cash_cows <- mutate(filter_cash_cows, rank_rev = percent_rank(revenue))
filter_cash_cows <- filter_cash_cows %>%
filter(rank_rev >= 0.75 & items > mean(filter_cash_cows$items) & pct_revenue > 0.3)
# 3. filter for new customers (last 6 months) that spent 50% of their spending on this one category
filter_new_lovers <- lovers %>% filter(cohort >= "2017-06-01" & pct_revenue > 0.5)
# 4. filter for customers that bought a product from that category in the last 30 days
filter_recent_lovers <- lovers %>% filter(last_category == product_category & since_last <= 30)
# join all types
lovers_list <- bind_rows(filter_high_end, filter_cash_cows, filter_new_lovers, filter_recent_lovers, .id = "id")
stars <- intersect(filter_high_end$user_id, filter_cash_cows$user_id)
lovers_list$id[lovers_list$user_id %in% stars] <- 0
View(lovers_list)
lovers_list[!duplicated(lovers_list$user_id),]
data_cut2 <- lovers_list[!duplicated(lovers_list$user_id),]
View(data_cut2)
View(lovers_list)
View(customers_by_category)
View(segments)
source("helpers.R")
shoe_lovers <- getUserList(customers_by_category, segments, "Outerwear")
source("helpers.R")
shoe_lovers <- getUserList(customers_by_category, segments, "Outerwear")
unique(products$category)
lovers_footwear <- getUserList(customers_by_category, segments, "Footwear")
View(lovers_footwear)
lovers_list <- arrange(lovers_list, id)
View(lovers_list)
lovers_footwear <- getUserList(customers_by_category, segments, "Footwear")
lovers_sweaters <- getUserList(customers_by_category, segments, "Sweaters")
lovers_woven_tops <- getUserList(customers_by_category, segments, "Woven Tops")
lovers_woven_dress <- getUserList(customers_by_category, segments, "Woven Dresses")
lovers_knit_tops <- getUserList(customers_by_category, segments, "Knit Tops")
lovers_knit_dress <- getUserList(customers_by_category, segments, "Knit Dresses")
lovers_bags <- getUserList(customers_by_category, segments, "Bags")
lovers_bottoms <- getUserList(customers_by_category, segments, "Bottoms")
lovers_seasonal <- getUserList(customers_by_category, segments, "Seasonal Accessories")
lovers_shirting <- getUserList(customers_by_category, segments, "Shirting")
lovers_slg <- getUserList(customers_by_category, segments, "SLGs")
lovers_outerwear <- getUserList(customers_by_category, segments, "Outwear")
lovers_denim <- getUserList(customers_by_category, segments, "Denim")
lovers_other <- getUserList(customers_by_category, segments, "Other")
lovers_outerwear <- getUserList(customers_by_category, segments, "Outerwear")
lovers_other
View(lovers)
product_lover <- lovers_footwear
View(product_lover)
source("helpers.R")
slice <- slice %>%
group_by(id, gender) %>%
arrange(id, .by_group = TRUE)
slice <- product_lover %>%
group_by(id, gender) %>%
arrange(id, .by_group = TRUE)
# create summary tables for features
data_cut <- summarise(slice,
revenue = sum(revenue),
avg_order = sum(revenue) / sum(orders),
items = sum(items)
)
View(data_cut)
lovers_footwear <- getUserList(customers_by_category, segments, "Footwear")
product_lover <- lovers_footwear
slice <- product_lover %>%
group_by(id, gender) %>%
arrange(id, .by_group = TRUE)
# create summary tables for features
data_cut <- summarise(slice,
revenue = sum(revenue),
avg_order = sum(revenue) / sum(orders),
items = sum(items)
)
printSummary <- function(product_lover) {
# arrange by id
slice <- product_lover %>%
group_by(id, gender) %>%
arrange(id, .by_group = TRUE)
data_cut <- summarise(slice,
revenue = sum(revenue),
avg_order = round(sum(revenue) / sum(orders),2),
items = sum(items)
)
return (data_cut)
}
product_lover <- printSummary(lovers_footwear)
kable(product_lover, caption = "Shoe lovers overview")
write.csv(lovers_footwear, file = "..020-notes/lovers_footwear.csv")
write.csv(lovers_footwear, file = "/020-notes/lovers_footwear.csv")
write.csv(lovers_footwear, file = "../020-notes/lovers_footwear.csv")
View(lovers_footwear)
source("helpers.R")
lovers_footwear <- getUserList(customers_by_category, segments, "Footwear")
lovers_sweaters <- getUserList(customers_by_category, segments, "Sweaters")
lovers_woven_tops <- getUserList(customers_by_category, segments, "Woven Tops")
lovers_woven_dress <- getUserList(customers_by_category, segments, "Woven Dresses")
lovers_knit_tops <- getUserList(customers_by_category, segments, "Knit Tops")
lovers_knit_dress <- getUserList(customers_by_category, segments, "Knit Dresses")
lovers_bags <- getUserList(customers_by_category, segments, "Bags")
lovers_bottoms <- getUserList(customers_by_category, segments, "Bottoms")
lovers_seasonal <- getUserList(customers_by_category, segments, "Seasonal Accessories")
lovers_shirting <- getUserList(customers_by_category, segments, "Shirting")
lovers_slg <- getUserList(customers_by_category, segments, "SLGs")
lovers_outerwear <- getUserList(customers_by_category, segments, "Outerwear")
lovers_denim <- getUserList(customers_by_category, segments, "Denim")
lovers_other <- getUserList(customers_by_category, segments, "Other")
product_lover <- printSummary(lovers_footwear)
product_lover <- printSummary(lovers_footwear)
kable(product_lover, caption = "Shoe lovers overview")
product_lover <- printSummary(lovers_sweaters)
kable(product_lover, caption = "Sweater lovers overview")
# display table for knit top lovers
product_lover <- printSummary(lovers_knit_tops)
kable(product_lover, caption = "Knit top lovers overview")
write.csv(lovers_footwear[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_footwear.csv")
write.csv(lovers_footwear[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_footwear.csv")
write.csv(lovers_sweaters[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_sweaters.csv")
write.csv(lovers_woven_tops[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_woven_tops.csv")
write.csv(lovers_lovers_woven_dress[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_lovers_woven_dress.csv")
write.csv(lovers_footwear[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_footwear.csv")
write.csv(lovers_sweaters[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_sweaters.csv")
write.csv(lovers_woven_tops[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_woven_tops.csv")
write.csv(lovers_lovers_woven_dress[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_woven_dress.csv")
write.csv(lovers_footwear[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_footwear.csv")
write.csv(lovers_sweaters[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_sweaters.csv")
write.csv(lovers_woven_tops[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_woven_tops.csv")
write.csv(lovers_woven_dress[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_woven_dress.csv")
write.csv(lovers_knit_tops[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_knit_tops.csv")
write.csv(lovers_knit_dress[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_knit_dress.csv")
write.csv(lovers_bags[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_bags.csv")
write.csv(lovers_bottoms[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_bottoms.csv")
write.csv(lovers_seasonal[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_seasonal.csv")
write.csv(lovers_shirting[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_shirting.csv")
write.csv(lovers_slg[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_slg.csv")
write.csv(lovers_outerwear[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_outerwear.csv")
write.csv(lovers_denim[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_denim.csv")
write.csv(lovers_other[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_other.csv")
write.csv(lovers_footwear[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_footwear.csv", row.names = FALSE)
write.csv(lovers_footwear[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_footwear.csv", row.names = FALSE)
write.csv(lovers_sweaters[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_sweaters.csv", row.names = FALSE)
write.csv(lovers_woven_tops[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_woven_tops.csv", row.names = FALSE)
write.csv(lovers_woven_dress[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_woven_dress.csv", row.names = FALSE)
write.csv(lovers_knit_tops[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_knit_tops.csv", row.names = FALSE)
write.csv(lovers_knit_dress[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_knit_dress.csv", row.names = FALSE)
write.csv(lovers_bags[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_bags.csv", row.names = FALSE)
write.csv(lovers_bottoms[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_bottoms.csv", row.names = FALSE)
write.csv(lovers_seasonal[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_seasonal.csv", row.names = FALSE)
write.csv(lovers_shirting[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_shirting.csv", row.names = FALSE)
write.csv(lovers_slg[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_slg.csv", row.names = FALSE)
write.csv(lovers_outerwear[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_outerwear.csv", row.names = FALSE)
write.csv(lovers_denim[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_denim.csv", row.names = FALSE)
write.csv(lovers_other[,c(1,2,10:13,15,4:7)], file = "../020-notes/lovers_other.csv", row.names = FALSE)
